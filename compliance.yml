schedules:
- cron: '0 0 */21 * *'
  displayName: 'Run every 21 days at 12:00 a.m.'
  branches:
    include: 
    - main

variables:
  - group: vssetup-apiscan
  - group: vssetup-apiscan-secrets
  - name: TeamName
    value: VSSetup
  - name: OutputName
    value: VisualStudioAdminTemplates
  - name: FinalDropPath
    value: $(Build.StagingDirectory)\finalDrop
  - name: ProjectName
    value: ADMXExtractor

resources:
  repositories:
    - repository: MicroBuildTemplate
      type: git
      name: 1ESPipelineTemplates/MicroBuildTemplate
      ref: refs/tags/release

extends:
  template: azure-pipelines/MicroBuild.1ES.Unofficial.yml@MicroBuildTemplate
  parameters:
    pool:
      name: VSEngSS-MicroBuild2022-1ES
    sdl:
      sourceAnalysisPool:
        name: AzurePipelines-EO
        image: 1ESPT-Windows2022
      antimalwareScan:
        enabled: true
      armory:
        enabled: true
      binskim:
        enabled: true
        scanOutputDirectoryOnly: true
      codeql:
        compiled:
          enabled: true
      credscan:
        enabled: true
      policheck:
        enabled: true
      psscriptanalyzer:
        enabled: true
      prefast:
        enabled: true
      tsa:
        enabled: true
        configFile: $(Build.SourcesDirectory)\.config\tsaoptions.json
        onboard: false # We already onboarded

    stages:
      - stage: Build
        jobs:
          - job: Build
            templateContext:
              mb:
                localization:
                  enabled: true
                  type: 'full'
                  languages: 'VS'
                  lsbuildVersion: 'V7'
                  feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'

            steps:
              - template: /build/templates/build-steps-template.yml@self
                parameters:
                  outputNameWithExtension: $(OutputName).exe
                  finalDrop: $(FinalDropPath)
                  projectName: $(ProjectName)

              - task: CopyFiles@2
                displayName: Copy files for API scan
                inputs:
                  SourceFolder: $(Build.ArtifactStagingDirectory)
                  Contents: |
                    **\$(OutputName).?(exe|pdb|dll|xml)
                    **\$(ProjectName)\*.?(exe|pdb|dll|xml)
                    !**\*.Test.*
                  TargetFolder: $(Build.StagingDirectory)\apiscan-inputs

              - task: APIScan@2
                displayName: Run APIScan
                inputs:
                  softwareFolder: $(Build.StagingDirectory)\apiscan-inputs
                  softwareName: 'Microsoft.VisualStudioAdministrativeTemplates'
                  softwareVersionNum: '1'
                  toolVersion: Latest
                env:
                  AzureServicesAuthConnectionString: runAs=App;AppId=$(ApiScanClientId);TenantId=$(ApiScanTenant);AppKey=$(SetupAppApiScanSecret)

              - task: PublishSecurityAnalysisLogs@3
                displayName: Publish 'SDLAnalysis-APIScan' artifact
                condition: succeededOrFailed()
                inputs:
                  ArtifactName: SDLAnalysis-APIScan
                  AllTools: false
                  APIScan: true

              - task: PostAnalysis@2
                displayName: Post Analysis
                inputs:
                  GdnBreakAllTools: false
                  GdnBreakGdnToolApiScan: true
                
              - task: TSAUpload@2
                displayName: Upload APIScan results to TSA
                inputs:
                  GdnPublishTsaOnboard: false
                  GdnPublishTsaConfigFile: '$(Build.SourcesDirectory)\.config\tsaoptions.json'
                  GdnPublishTsaExportedResultsPublishable: true
                continueOnError: true
                condition: succeededOrFailed()
                enabled: true